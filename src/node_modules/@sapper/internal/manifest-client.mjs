// This file is generated by Sapper â€” do not edit it!
// webpack does not support export * as root_comp yet so do a two line import/export
import * as root_comp from '../../../routes/_layout.svelte';
export { root_comp };
export { default as ErrorComponent } from '../../../routes/_error.svelte';

export const ignore = [/^\/blog\.json$/, /^\/blog\/([^/]+?)\.json$/];

export const components = [
	{
		js: () => import("../../../routes/index.svelte")
	},
	{
		js: () => import("../../../routes/portfolio.svelte")
	},
	{
		js: () => import("../../../routes/services.svelte")
	},
	{
		js: () => import("../../../routes/contact.svelte")
	},
	{
		js: () => import("../../../routes/about.svelte")
	},
	{
		js: () => import("../../../routes/posts/[permalink].svelte")
	},
	{
		js: () => import("../../../routes/posts.svelte")
	},
	{
		js: () => import("../../../routes/blog/index.svelte")
	},
	{
		js: () => import("../../../routes/blog/[slug].svelte")
	},
	{
		js: () => import("../../../routes/tag/[tag].svelte")
	}
];

export const routes = (d => [
	{
		// index.svelte
		pattern: /^\/$/,
		parts: [
			{ i: 0 }
		]
	},

	{
		// portfolio.svelte
		pattern: /^\/portfolio\/?$/,
		parts: [
			{ i: 1 }
		]
	},

	{
		// services.svelte
		pattern: /^\/services\/?$/,
		parts: [
			{ i: 2 }
		]
	},

	{
		// contact.svelte
		pattern: /^\/contact\/?$/,
		parts: [
			{ i: 3 }
		]
	},

	{
		// about.svelte
		pattern: /^\/about\/?$/,
		parts: [
			{ i: 4 }
		]
	},

	{
		// posts/[permalink].svelte
		pattern: /^\/posts\/([^/]+?)\/?$/,
		parts: [
			null,
			{ i: 5, params: match => ({ permalink: d(match[1]) }) }
		]
	},

	{
		// posts.svelte
		pattern: /^\/posts\/?$/,
		parts: [
			{ i: 6 }
		]
	},

	{
		// blog/index.svelte
		pattern: /^\/blog\/?$/,
		parts: [
			{ i: 7 }
		]
	},

	{
		// blog/[slug].svelte
		pattern: /^\/blog\/([^/]+?)\/?$/,
		parts: [
			null,
			{ i: 8, params: match => ({ slug: d(match[1]) }) }
		]
	},

	{
		// tag/[tag].svelte
		pattern: /^\/tag\/([^/]+?)\/?$/,
		parts: [
			null,
			{ i: 9, params: match => ({ tag: d(match[1]) }) }
		]
	}
])(decodeURIComponent);