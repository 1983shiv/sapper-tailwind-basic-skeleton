import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, I as onMount, e as element, t as text, b as space, a as svg_element, f as claim_element, g as children, k as claim_text, h as detach_dev, j as claim_space, m as attr_dev, n as add_location, o as insert_dev, p as append_dev, r as noop } from './client.66758637.js';

/* src\routes\contact.svelte generated by Svelte v3.38.2 */
const file = "src\\routes\\contact.svelte";

function create_fragment(ctx) {
	let section;
	let div12;
	let div0;
	let h1;
	let t0;
	let t1;
	let p;
	let t2;
	let t3;
	let div1;
	let h2;
	let t4;
	let div1_class_value;
	let t5;
	let div11;
	let form;
	let div9;
	let div3;
	let div2;
	let label0;
	let t6;
	let t7;
	let input0;
	let t8;
	let div5;
	let div4;
	let label1;
	let t9;
	let t10;
	let input1;
	let t11;
	let div7;
	let div6;
	let label2;
	let t12;
	let t13;
	let textarea;
	let t14;
	let div8;
	let button;
	let t15;
	let t16;
	let div10;
	let a0;
	let t17;
	let t18;
	let br0;
	let t19;
	let a1;
	let t20;
	let br1;
	let t21;
	let span;
	let a2;
	let svg0;
	let path0;
	let t22;
	let a3;
	let svg1;
	let path1;
	let t23;
	let a4;
	let svg2;
	let rect;
	let path2;
	let t24;
	let a5;
	let svg3;
	let path3;
	let div11_class_value;

	const block = {
		c: function create() {
			section = element("section");
			div12 = element("div");
			div0 = element("div");
			h1 = element("h1");
			t0 = text("Let's Talk");
			t1 = space();
			p = element("p");
			t2 = text("Let's have a discussion regarding your new job requriement. please send\r\n        us your name, email and your job description with time availability and\r\n        skype id, so we can discuss in detail.");
			t3 = space();
			div1 = element("div");
			h2 = element("h2");
			t4 = text("Thanking you for Contact us, we will get back to you very soon.");
			t5 = space();
			div11 = element("div");
			form = element("form");
			div9 = element("div");
			div3 = element("div");
			div2 = element("div");
			label0 = element("label");
			t6 = text("Name");
			t7 = space();
			input0 = element("input");
			t8 = space();
			div5 = element("div");
			div4 = element("div");
			label1 = element("label");
			t9 = text("Email");
			t10 = space();
			input1 = element("input");
			t11 = space();
			div7 = element("div");
			div6 = element("div");
			label2 = element("label");
			t12 = text("Message");
			t13 = space();
			textarea = element("textarea");
			t14 = space();
			div8 = element("div");
			button = element("button");
			t15 = text("Submit");
			t16 = space();
			div10 = element("div");
			a0 = element("a");
			t17 = text("ninjatech.design@gmail.com");
			t18 = space();
			br0 = element("br");
			t19 = space();
			a1 = element("a");
			t20 = text("srivastava.shiv");
			br1 = element("br");
			t21 = space();
			span = element("span");
			a2 = element("a");
			svg0 = svg_element("svg");
			path0 = svg_element("path");
			t22 = space();
			a3 = element("a");
			svg1 = svg_element("svg");
			path1 = svg_element("path");
			t23 = space();
			a4 = element("a");
			svg2 = svg_element("svg");
			rect = svg_element("rect");
			path2 = svg_element("path");
			t24 = space();
			a5 = element("a");
			svg3 = svg_element("svg");
			path3 = svg_element("path");
			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			div12 = claim_element(section_nodes, "DIV", { class: true });
			var div12_nodes = children(div12);
			div0 = claim_element(div12_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			h1 = claim_element(div0_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t0 = claim_text(h1_nodes, "Let's Talk");
			h1_nodes.forEach(detach_dev);
			t1 = claim_space(div0_nodes);
			p = claim_element(div0_nodes, "P", { class: true });
			var p_nodes = children(p);
			t2 = claim_text(p_nodes, "Let's have a discussion regarding your new job requriement. please send\r\n        us your name, email and your job description with time availability and\r\n        skype id, so we can discuss in detail.");
			p_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t3 = claim_space(div12_nodes);
			div1 = claim_element(div12_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			h2 = claim_element(div1_nodes, "H2", {});
			var h2_nodes = children(h2);
			t4 = claim_text(h2_nodes, "Thanking you for Contact us, we will get back to you very soon.");
			h2_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t5 = claim_space(div12_nodes);
			div11 = claim_element(div12_nodes, "DIV", { class: true });
			var div11_nodes = children(div11);
			form = claim_element(div11_nodes, "FORM", { id: true, action: true, method: true });
			var form_nodes = children(form);
			div9 = claim_element(form_nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			div3 = claim_element(div9_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			label0 = claim_element(div2_nodes, "LABEL", { for: true, class: true });
			var label0_nodes = children(label0);
			t6 = claim_text(label0_nodes, "Name");
			label0_nodes.forEach(detach_dev);
			t7 = claim_space(div2_nodes);

			input0 = claim_element(div2_nodes, "INPUT", {
				type: true,
				id: true,
				name: true,
				class: true
			});

			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			t8 = claim_space(div9_nodes);
			div5 = claim_element(div9_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			label1 = claim_element(div4_nodes, "LABEL", { for: true, class: true });
			var label1_nodes = children(label1);
			t9 = claim_text(label1_nodes, "Email");
			label1_nodes.forEach(detach_dev);
			t10 = claim_space(div4_nodes);

			input1 = claim_element(div4_nodes, "INPUT", {
				type: true,
				id: true,
				name: true,
				class: true
			});

			div4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			t11 = claim_space(div9_nodes);
			div7 = claim_element(div9_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			div6 = claim_element(div7_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			label2 = claim_element(div6_nodes, "LABEL", { for: true, class: true });
			var label2_nodes = children(label2);
			t12 = claim_text(label2_nodes, "Message");
			label2_nodes.forEach(detach_dev);
			t13 = claim_space(div6_nodes);
			textarea = claim_element(div6_nodes, "TEXTAREA", { id: true, name: true, class: true });
			children(textarea).forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			div7_nodes.forEach(detach_dev);
			t14 = claim_space(div9_nodes);
			div8 = claim_element(div9_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			button = claim_element(div8_nodes, "BUTTON", { type: true, class: true });
			var button_nodes = children(button);
			t15 = claim_text(button_nodes, "Submit");
			button_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			form_nodes.forEach(detach_dev);
			t16 = claim_space(div11_nodes);
			div10 = claim_element(div11_nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			a0 = claim_element(div10_nodes, "A", { href: true, class: true });
			var a0_nodes = children(a0);
			t17 = claim_text(a0_nodes, "ninjatech.design@gmail.com");
			a0_nodes.forEach(detach_dev);
			t18 = claim_space(div10_nodes);
			br0 = claim_element(div10_nodes, "BR", {});
			t19 = claim_space(div10_nodes);
			a1 = claim_element(div10_nodes, "A", { href: true, class: true });
			var a1_nodes = children(a1);
			t20 = claim_text(a1_nodes, "srivastava.shiv");
			a1_nodes.forEach(detach_dev);
			br1 = claim_element(div10_nodes, "BR", {});
			t21 = claim_space(div10_nodes);
			span = claim_element(div10_nodes, "SPAN", { class: true });
			var span_nodes = children(span);
			a2 = claim_element(span_nodes, "A", { href: true, class: true });
			var a2_nodes = children(a2);

			svg0 = claim_element(
				a2_nodes,
				"svg",
				{
					fill: true,
					"stroke-linecap": true,
					"stroke-linejoin": true,
					"stroke-width": true,
					class: true,
					viewBox: true
				},
				1
			);

			var svg0_nodes = children(svg0);
			path0 = claim_element(svg0_nodes, "path", { d: true }, 1);
			children(path0).forEach(detach_dev);
			svg0_nodes.forEach(detach_dev);
			a2_nodes.forEach(detach_dev);
			t22 = claim_space(span_nodes);
			a3 = claim_element(span_nodes, "A", { href: true, class: true });
			var a3_nodes = children(a3);

			svg1 = claim_element(
				a3_nodes,
				"svg",
				{
					fill: true,
					"stroke-linecap": true,
					"stroke-linejoin": true,
					"stroke-width": true,
					class: true,
					viewBox: true
				},
				1
			);

			var svg1_nodes = children(svg1);
			path1 = claim_element(svg1_nodes, "path", { d: true }, 1);
			children(path1).forEach(detach_dev);
			svg1_nodes.forEach(detach_dev);
			a3_nodes.forEach(detach_dev);
			t23 = claim_space(span_nodes);
			a4 = claim_element(span_nodes, "A", { href: true, class: true });
			var a4_nodes = children(a4);

			svg2 = claim_element(
				a4_nodes,
				"svg",
				{
					fill: true,
					stroke: true,
					"stroke-linecap": true,
					"stroke-linejoin": true,
					"stroke-width": true,
					class: true,
					viewBox: true
				},
				1
			);

			var svg2_nodes = children(svg2);

			rect = claim_element(
				svg2_nodes,
				"rect",
				{
					width: true,
					height: true,
					x: true,
					y: true,
					rx: true,
					ry: true
				},
				1
			);

			children(rect).forEach(detach_dev);
			path2 = claim_element(svg2_nodes, "path", { d: true }, 1);
			children(path2).forEach(detach_dev);
			svg2_nodes.forEach(detach_dev);
			a4_nodes.forEach(detach_dev);
			t24 = claim_space(span_nodes);
			a5 = claim_element(span_nodes, "A", { href: true, class: true });
			var a5_nodes = children(a5);

			svg3 = claim_element(
				a5_nodes,
				"svg",
				{
					fill: true,
					"stroke-linecap": true,
					"stroke-linejoin": true,
					"stroke-width": true,
					class: true,
					viewBox: true
				},
				1
			);

			var svg3_nodes = children(svg3);
			path3 = claim_element(svg3_nodes, "path", { d: true }, 1);
			children(path3).forEach(detach_dev);
			svg3_nodes.forEach(detach_dev);
			a5_nodes.forEach(detach_dev);
			span_nodes.forEach(detach_dev);
			div10_nodes.forEach(detach_dev);
			div11_nodes.forEach(detach_dev);
			div12_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h1, "class", "sm:text-3xl text-2xl font-2xl font-bold title-font mb-4 text-gray-900");
			add_location(h1, file, 25, 6, 807);
			attr_dev(p, "class", "lg:w-2/3 mx-auto leading-relaxed text-base");
			add_location(p, file, 30, 6, 947);
			attr_dev(div0, "class", "flex flex-col text-center w-full mb-12");
			add_location(div0, file, 24, 4, 747);
			add_location(h2, file, 41, 6, 1362);
			attr_dev(div1, "class", div1_class_value = "flex flex-col text-center w-full mb-12 " + (/*messageSent*/ ctx[0] ? "" : "hidden"));
			add_location(div1, file, 36, 4, 1241);
			attr_dev(label0, "for", "name");
			attr_dev(label0, "class", "leading-7 text-sm text-gray-600");
			add_location(label0, file, 52, 14, 1799);
			attr_dev(input0, "type", "text");
			attr_dev(input0, "id", "fullname");
			attr_dev(input0, "name", "fullname");
			attr_dev(input0, "class", "w-full bg-gray-100 bg-opacity-50 rounded border border-gray-300 focus:border-pink-500 focus:bg-white focus:ring-2 focus:ring-pink-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out");
			add_location(input0, file, 55, 14, 1919);
			attr_dev(div2, "class", "relative");
			add_location(div2, file, 51, 12, 1761);
			attr_dev(div3, "class", "p-2 w-1/2");
			add_location(div3, file, 50, 10, 1724);
			attr_dev(label1, "for", "email");
			attr_dev(label1, "class", "leading-7 text-sm text-gray-600");
			add_location(label1, file, 65, 14, 2420);
			attr_dev(input1, "type", "email");
			attr_dev(input1, "id", "email");
			attr_dev(input1, "name", "email");
			attr_dev(input1, "class", "w-full bg-gray-100 bg-opacity-50 rounded border border-gray-300 focus:border-pink-500 focus:bg-white focus:ring-2 focus:ring-pink-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out");
			add_location(input1, file, 68, 14, 2542);
			attr_dev(div4, "class", "relative");
			add_location(div4, file, 64, 12, 2382);
			attr_dev(div5, "class", "p-2 w-1/2");
			add_location(div5, file, 63, 10, 2345);
			attr_dev(label2, "for", "message");
			attr_dev(label2, "class", "leading-7 text-sm text-gray-600");
			add_location(label2, file, 78, 14, 3039);
			attr_dev(textarea, "id", "message");
			attr_dev(textarea, "name", "message");
			attr_dev(textarea, "class", "w-full bg-gray-100 bg-opacity-50 rounded border border-gray-300 focus:border-pink-500 focus:bg-white focus:ring-2 focus:ring-pink-200 h-32 text-base outline-none text-gray-700 py-1 px-3 resize-none leading-6 transition-colors duration-200 ease-in-out");
			add_location(textarea, file, 81, 14, 3165);
			attr_dev(div6, "class", "relative");
			add_location(div6, file, 77, 12, 3001);
			attr_dev(div7, "class", "p-2 w-full");
			add_location(div7, file, 76, 10, 2963);
			attr_dev(button, "type", "submit");
			attr_dev(button, "class", "flex mx-auto text-white bg-pink-500 border-0 py-2 px-8 focus:outline-none hover:bg-pink-600 rounded text-lg");
			add_location(button, file, 89, 12, 3618);
			attr_dev(div8, "class", "p-2 w-full");
			add_location(div8, file, 88, 10, 3580);
			attr_dev(div9, "class", "flex flex-wrap -m-2");
			add_location(div9, file, 49, 8, 1679);
			attr_dev(form, "id", "contact-form");
			attr_dev(form, "action", "https://getform.io/f/3d8af4d6-d4dc-41e1-b2ea-43bb410a81a5");
			attr_dev(form, "method", "POST");
			add_location(form, file, 44, 6, 1529);
			attr_dev(a0, "href", "mailto:ninjatech.design@gmail.com");
			attr_dev(a0, "class", "text-pink-500");
			add_location(a0, file, 98, 8, 3969);
			add_location(br0, file, 100, 10, 4088);
			attr_dev(a1, "href", "#srivastava.shiv");
			attr_dev(a1, "class", "text-pink-500");
			add_location(a1, file, 101, 8, 4104);
			add_location(br1, file, 101, 76, 4172);
			attr_dev(path0, "d", "M18 2h-3a5 5 0 00-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 011-1h3z");
			add_location(path0, file, 113, 14, 4534);
			attr_dev(svg0, "fill", "currentColor");
			attr_dev(svg0, "stroke-linecap", "round");
			attr_dev(svg0, "stroke-linejoin", "round");
			attr_dev(svg0, "stroke-width", "2");
			attr_dev(svg0, "class", "w-5 h-5");
			attr_dev(svg0, "viewBox", "0 0 24 24");
			add_location(svg0, file, 105, 12, 4289);
			attr_dev(a2, "href", ".");
			attr_dev(a2, "class", "text-gray-500");
			add_location(a2, file, 104, 10, 4241);
			attr_dev(path1, "d", "M23 3a10.9 10.9 0 01-3.14 1.53 4.48 4.48 0 00-7.86 3v1A10.66 10.66 0 013 4s-4 9 5 13a11.64 11.64 0 01-7 2c9 5 20 0 20-11.5a4.5 4.5 0 00-.08-.83A7.72 7.72 0 0023 3z");
			add_location(path1, file, 127, 14, 4987);
			attr_dev(svg1, "fill", "currentColor");
			attr_dev(svg1, "stroke-linecap", "round");
			attr_dev(svg1, "stroke-linejoin", "round");
			attr_dev(svg1, "stroke-width", "2");
			attr_dev(svg1, "class", "w-5 h-5");
			attr_dev(svg1, "viewBox", "0 0 24 24");
			add_location(svg1, file, 119, 12, 4742);
			attr_dev(a3, "href", ".");
			attr_dev(a3, "class", "ml-4 text-gray-500");
			add_location(a3, file, 118, 10, 4689);
			attr_dev(rect, "width", "20");
			attr_dev(rect, "height", "20");
			attr_dev(rect, "x", "2");
			attr_dev(rect, "y", "2");
			attr_dev(rect, "rx", "5");
			attr_dev(rect, "ry", "5");
			add_location(rect, file, 142, 14, 5570);
			attr_dev(path2, "d", "M16 11.37A4 4 0 1112.63 8 4 4 0 0116 11.37zm1.5-4.87h.01");
			add_location(path2, file, 143, 14, 5643);
			attr_dev(svg2, "fill", "none");
			attr_dev(svg2, "stroke", "currentColor");
			attr_dev(svg2, "stroke-linecap", "round");
			attr_dev(svg2, "stroke-linejoin", "round");
			attr_dev(svg2, "stroke-width", "2");
			attr_dev(svg2, "class", "w-5 h-5");
			attr_dev(svg2, "viewBox", "0 0 24 24");
			add_location(svg2, file, 133, 12, 5296);
			attr_dev(a4, "href", ".");
			attr_dev(a4, "class", "ml-4 text-gray-500");
			add_location(a4, file, 132, 10, 5243);
			attr_dev(path3, "d", "M21 11.5a8.38 8.38 0 01-.9 3.8 8.5 8.5 0 01-7.6 4.7 8.38 8.38 0 01-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 01-.9-3.8 8.5 8.5 0 014.7-7.6 8.38 8.38 0 013.8-.9h.5a8.48 8.48 0 018 8v.5z");
			add_location(path3, file, 157, 14, 6090);
			attr_dev(svg3, "fill", "currentColor");
			attr_dev(svg3, "stroke-linecap", "round");
			attr_dev(svg3, "stroke-linejoin", "round");
			attr_dev(svg3, "stroke-width", "2");
			attr_dev(svg3, "class", "w-5 h-5");
			attr_dev(svg3, "viewBox", "0 0 24 24");
			add_location(svg3, file, 149, 12, 5845);
			attr_dev(a5, "href", ".");
			attr_dev(a5, "class", "ml-4 text-gray-500");
			add_location(a5, file, 148, 10, 5792);
			attr_dev(span, "class", "inline-flex  mt-4");
			add_location(span, file, 103, 8, 4197);
			attr_dev(div10, "class", "p-2 w-full pt-8 mt-8 border-t border-gray-200 text-center");
			add_location(div10, file, 97, 6, 3888);
			attr_dev(div11, "class", div11_class_value = "lg:w-1/2 md:w-2/3 mx-auto " + (/*messageSent*/ ctx[0] ? "hidden" : ""));
			add_location(div11, file, 43, 4, 1452);
			attr_dev(div12, "class", "container px-5 py-24 mx-auto");
			add_location(div12, file, 23, 2, 699);
			attr_dev(section, "class", "text-gray-600 body-font relative");
			add_location(section, file, 22, 0, 645);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			append_dev(section, div12);
			append_dev(div12, div0);
			append_dev(div0, h1);
			append_dev(h1, t0);
			append_dev(div0, t1);
			append_dev(div0, p);
			append_dev(p, t2);
			append_dev(div12, t3);
			append_dev(div12, div1);
			append_dev(div1, h2);
			append_dev(h2, t4);
			append_dev(div12, t5);
			append_dev(div12, div11);
			append_dev(div11, form);
			append_dev(form, div9);
			append_dev(div9, div3);
			append_dev(div3, div2);
			append_dev(div2, label0);
			append_dev(label0, t6);
			append_dev(div2, t7);
			append_dev(div2, input0);
			append_dev(div9, t8);
			append_dev(div9, div5);
			append_dev(div5, div4);
			append_dev(div4, label1);
			append_dev(label1, t9);
			append_dev(div4, t10);
			append_dev(div4, input1);
			append_dev(div9, t11);
			append_dev(div9, div7);
			append_dev(div7, div6);
			append_dev(div6, label2);
			append_dev(label2, t12);
			append_dev(div6, t13);
			append_dev(div6, textarea);
			append_dev(div9, t14);
			append_dev(div9, div8);
			append_dev(div8, button);
			append_dev(button, t15);
			append_dev(div11, t16);
			append_dev(div11, div10);
			append_dev(div10, a0);
			append_dev(a0, t17);
			append_dev(div10, t18);
			append_dev(div10, br0);
			append_dev(div10, t19);
			append_dev(div10, a1);
			append_dev(a1, t20);
			append_dev(div10, br1);
			append_dev(div10, t21);
			append_dev(div10, span);
			append_dev(span, a2);
			append_dev(a2, svg0);
			append_dev(svg0, path0);
			append_dev(span, t22);
			append_dev(span, a3);
			append_dev(a3, svg1);
			append_dev(svg1, path1);
			append_dev(span, t23);
			append_dev(span, a4);
			append_dev(a4, svg2);
			append_dev(svg2, rect);
			append_dev(svg2, path2);
			append_dev(span, t24);
			append_dev(span, a5);
			append_dev(a5, svg3);
			append_dev(svg3, path3);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*messageSent*/ 1 && div1_class_value !== (div1_class_value = "flex flex-col text-center w-full mb-12 " + (/*messageSent*/ ctx[0] ? "" : "hidden"))) {
				attr_dev(div1, "class", div1_class_value);
			}

			if (dirty & /*messageSent*/ 1 && div11_class_value !== (div11_class_value = "lg:w-1/2 md:w-2/3 mx-auto " + (/*messageSent*/ ctx[0] ? "hidden" : ""))) {
				attr_dev(div11, "class", div11_class_value);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Contact", slots, []);
	let messageSent = false;

	onMount(() => {
		const formElement = document.querySelector("#contact-form");

		formElement.addEventListener("submit", event => {
			event.preventDefault();
			const data = new URLSearchParams(new FormData(formElement));
			fetch("https://getform.io/f/3d8af4d6-d4dc-41e1-b2ea-43bb410a81a5", { method: "POST", body: data });
			$$invalidate(0, messageSent = true);
		});
	});

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Contact> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ onMount, messageSent });

	$$self.$inject_state = $$props => {
		if ("messageSent" in $$props) $$invalidate(0, messageSent = $$props.messageSent);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [messageSent];
}

class Contact extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Contact",
			options,
			id: create_fragment.name
		});
	}
}

export default Contact;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
