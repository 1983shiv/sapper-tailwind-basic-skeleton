import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, c as create_component, b as space, e as element, t as text, a as svg_element, l as claim_component, j as claim_space, f as claim_element, g as children, k as claim_text, h as detach_dev, m as attr_dev, n as add_location, q as mount_component, o as insert_dev, p as append_dev, r as noop, u as transition_in, w as transition_out, x as destroy_component } from './client.66758637.js';
import { S as SvelteSeo } from './SvelteSeo.fbff1738.js';

/* src\routes\about.svelte generated by Svelte v3.38.2 */
const file = "src\\routes\\about.svelte";

function create_fragment(ctx) {
	let svelteseo;
	let t0;
	let section;
	let div5;
	let div4;
	let div1;
	let span0;
	let t1;
	let t2;
	let h20;
	let t3;
	let t4;
	let p0;
	let t5;
	let t6;
	let div0;
	let a0;
	let t7;
	let svg0;
	let path0;
	let path1;
	let t8;
	let span1;
	let svg1;
	let path2;
	let circle0;
	let t9;
	let t10;
	let span2;
	let svg2;
	let path3;
	let t11;
	let t12;
	let a1;
	let img0;
	let img0_src_value;
	let t13;
	let span5;
	let span3;
	let t14;
	let t15;
	let span4;
	let t16;
	let t17;
	let div3;
	let span6;
	let t18;
	let t19;
	let h21;
	let t20;
	let t21;
	let p1;
	let t22;
	let t23;
	let div2;
	let a2;
	let t24;
	let svg3;
	let path4;
	let path5;
	let t25;
	let span7;
	let svg4;
	let path6;
	let circle1;
	let t26;
	let t27;
	let span8;
	let svg5;
	let path7;
	let t28;
	let t29;
	let a3;
	let img1;
	let img1_src_value;
	let t30;
	let span11;
	let span9;
	let t31;
	let t32;
	let span10;
	let t33;
	let current;

	svelteseo = new SvelteSeo({
			props: {
				title: "About Us",
				description: "A short description goes here.",
				openGraph: {
					title: "Open Graph Title",
					description: "Open Graph Description",
					url: "https://www.example.com/page",
					type: "website",
					images: [
						{
							url: "https://www.example.com/images/og-image.jpg",
							width: 850,
							height: 650,
							alt: "Og Image Alt"
						}
					]
				}
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(svelteseo.$$.fragment);
			t0 = space();
			section = element("section");
			div5 = element("div");
			div4 = element("div");
			div1 = element("div");
			span0 = element("span");
			t1 = text("CATEGORY");
			t2 = space();
			h20 = element("h2");
			t3 = text("Roof party normcore before they sold out, cornhole vape");
			t4 = space();
			p0 = element("p");
			t5 = text("Live-edge letterpress cliche, salvia fanny pack humblebrag narwhal\r\n          portland. VHS man braid palo santo hoodie brunch trust fund. Bitters\r\n          hashtag waistcoat fashion axe chia unicorn. Plaid fixie chambray 90's,\r\n          slow-carb etsy tumeric. Cray pug you probably haven't heard of them\r\n          hexagon kickstarter craft beer pork chic.");
			t6 = space();
			div0 = element("div");
			a0 = element("a");
			t7 = text("Learn More\r\n            ");
			svg0 = svg_element("svg");
			path0 = svg_element("path");
			path1 = svg_element("path");
			t8 = space();
			span1 = element("span");
			svg1 = svg_element("svg");
			path2 = svg_element("path");
			circle0 = svg_element("circle");
			t9 = text("1.2K");
			t10 = space();
			span2 = element("span");
			svg2 = svg_element("svg");
			path3 = svg_element("path");
			t11 = text("6");
			t12 = space();
			a1 = element("a");
			img0 = element("img");
			t13 = space();
			span5 = element("span");
			span3 = element("span");
			t14 = text("Holden Caulfield");
			t15 = space();
			span4 = element("span");
			t16 = text("UI DEVELOPER");
			t17 = space();
			div3 = element("div");
			span6 = element("span");
			t18 = text("CATEGORY");
			t19 = space();
			h21 = element("h2");
			t20 = text("Pinterest DIY dreamcatcher gentrify single-origin coffee");
			t21 = space();
			p1 = element("p");
			t22 = text("Live-edge letterpress cliche, salvia fanny pack humblebrag narwhal\r\n          portland. VHS man braid palo santo hoodie brunch trust fund. Bitters\r\n          hashtag waistcoat fashion axe chia unicorn. Plaid fixie chambray 90's,\r\n          slow-carb etsy tumeric.");
			t23 = space();
			div2 = element("div");
			a2 = element("a");
			t24 = text("Learn More\r\n            ");
			svg3 = svg_element("svg");
			path4 = svg_element("path");
			path5 = svg_element("path");
			t25 = space();
			span7 = element("span");
			svg4 = svg_element("svg");
			path6 = svg_element("path");
			circle1 = svg_element("circle");
			t26 = text("1.2K");
			t27 = space();
			span8 = element("span");
			svg5 = svg_element("svg");
			path7 = svg_element("path");
			t28 = text("6");
			t29 = space();
			a3 = element("a");
			img1 = element("img");
			t30 = space();
			span11 = element("span");
			span9 = element("span");
			t31 = text("Alper Kamu");
			t32 = space();
			span10 = element("span");
			t33 = text("DESIGNER");
			this.h();
		},
		l: function claim(nodes) {
			claim_component(svelteseo.$$.fragment, nodes);
			t0 = claim_space(nodes);
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			div5 = claim_element(section_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div1 = claim_element(div4_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			span0 = claim_element(div1_nodes, "SPAN", { class: true });
			var span0_nodes = children(span0);
			t1 = claim_text(span0_nodes, "CATEGORY");
			span0_nodes.forEach(detach_dev);
			t2 = claim_space(div1_nodes);
			h20 = claim_element(div1_nodes, "H2", { class: true });
			var h20_nodes = children(h20);
			t3 = claim_text(h20_nodes, "Roof party normcore before they sold out, cornhole vape");
			h20_nodes.forEach(detach_dev);
			t4 = claim_space(div1_nodes);
			p0 = claim_element(div1_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t5 = claim_text(p0_nodes, "Live-edge letterpress cliche, salvia fanny pack humblebrag narwhal\r\n          portland. VHS man braid palo santo hoodie brunch trust fund. Bitters\r\n          hashtag waistcoat fashion axe chia unicorn. Plaid fixie chambray 90's,\r\n          slow-carb etsy tumeric. Cray pug you probably haven't heard of them\r\n          hexagon kickstarter craft beer pork chic.");
			p0_nodes.forEach(detach_dev);
			t6 = claim_space(div1_nodes);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			a0 = claim_element(div0_nodes, "A", { href: true, class: true });
			var a0_nodes = children(a0);
			t7 = claim_text(a0_nodes, "Learn More\r\n            ");

			svg0 = claim_element(
				a0_nodes,
				"svg",
				{
					class: true,
					viewBox: true,
					stroke: true,
					"stroke-width": true,
					fill: true,
					"stroke-linecap": true,
					"stroke-linejoin": true
				},
				1
			);

			var svg0_nodes = children(svg0);
			path0 = claim_element(svg0_nodes, "path", { d: true }, 1);
			children(path0).forEach(detach_dev);
			path1 = claim_element(svg0_nodes, "path", { d: true }, 1);
			children(path1).forEach(detach_dev);
			svg0_nodes.forEach(detach_dev);
			a0_nodes.forEach(detach_dev);
			t8 = claim_space(div0_nodes);
			span1 = claim_element(div0_nodes, "SPAN", { class: true });
			var span1_nodes = children(span1);

			svg1 = claim_element(
				span1_nodes,
				"svg",
				{
					class: true,
					stroke: true,
					"stroke-width": true,
					fill: true,
					"stroke-linecap": true,
					"stroke-linejoin": true,
					viewBox: true
				},
				1
			);

			var svg1_nodes = children(svg1);
			path2 = claim_element(svg1_nodes, "path", { d: true }, 1);
			children(path2).forEach(detach_dev);
			circle0 = claim_element(svg1_nodes, "circle", { cx: true, cy: true, r: true }, 1);
			children(circle0).forEach(detach_dev);
			svg1_nodes.forEach(detach_dev);
			t9 = claim_text(span1_nodes, "1.2K");
			span1_nodes.forEach(detach_dev);
			t10 = claim_space(div0_nodes);
			span2 = claim_element(div0_nodes, "SPAN", { class: true });
			var span2_nodes = children(span2);

			svg2 = claim_element(
				span2_nodes,
				"svg",
				{
					class: true,
					stroke: true,
					"stroke-width": true,
					fill: true,
					"stroke-linecap": true,
					"stroke-linejoin": true,
					viewBox: true
				},
				1
			);

			var svg2_nodes = children(svg2);
			path3 = claim_element(svg2_nodes, "path", { d: true }, 1);
			children(path3).forEach(detach_dev);
			svg2_nodes.forEach(detach_dev);
			t11 = claim_text(span2_nodes, "6");
			span2_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t12 = claim_space(div1_nodes);
			a1 = claim_element(div1_nodes, "A", { href: true, class: true });
			var a1_nodes = children(a1);
			img0 = claim_element(a1_nodes, "IMG", { alt: true, src: true, class: true });
			t13 = claim_space(a1_nodes);
			span5 = claim_element(a1_nodes, "SPAN", { class: true });
			var span5_nodes = children(span5);
			span3 = claim_element(span5_nodes, "SPAN", { class: true });
			var span3_nodes = children(span3);
			t14 = claim_text(span3_nodes, "Holden Caulfield");
			span3_nodes.forEach(detach_dev);
			t15 = claim_space(span5_nodes);
			span4 = claim_element(span5_nodes, "SPAN", { class: true });
			var span4_nodes = children(span4);
			t16 = claim_text(span4_nodes, "UI DEVELOPER");
			span4_nodes.forEach(detach_dev);
			span5_nodes.forEach(detach_dev);
			a1_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t17 = claim_space(div4_nodes);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			span6 = claim_element(div3_nodes, "SPAN", { class: true });
			var span6_nodes = children(span6);
			t18 = claim_text(span6_nodes, "CATEGORY");
			span6_nodes.forEach(detach_dev);
			t19 = claim_space(div3_nodes);
			h21 = claim_element(div3_nodes, "H2", { class: true });
			var h21_nodes = children(h21);
			t20 = claim_text(h21_nodes, "Pinterest DIY dreamcatcher gentrify single-origin coffee");
			h21_nodes.forEach(detach_dev);
			t21 = claim_space(div3_nodes);
			p1 = claim_element(div3_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t22 = claim_text(p1_nodes, "Live-edge letterpress cliche, salvia fanny pack humblebrag narwhal\r\n          portland. VHS man braid palo santo hoodie brunch trust fund. Bitters\r\n          hashtag waistcoat fashion axe chia unicorn. Plaid fixie chambray 90's,\r\n          slow-carb etsy tumeric.");
			p1_nodes.forEach(detach_dev);
			t23 = claim_space(div3_nodes);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			a2 = claim_element(div2_nodes, "A", { href: true, class: true });
			var a2_nodes = children(a2);
			t24 = claim_text(a2_nodes, "Learn More\r\n            ");

			svg3 = claim_element(
				a2_nodes,
				"svg",
				{
					class: true,
					viewBox: true,
					stroke: true,
					"stroke-width": true,
					fill: true,
					"stroke-linecap": true,
					"stroke-linejoin": true
				},
				1
			);

			var svg3_nodes = children(svg3);
			path4 = claim_element(svg3_nodes, "path", { d: true }, 1);
			children(path4).forEach(detach_dev);
			path5 = claim_element(svg3_nodes, "path", { d: true }, 1);
			children(path5).forEach(detach_dev);
			svg3_nodes.forEach(detach_dev);
			a2_nodes.forEach(detach_dev);
			t25 = claim_space(div2_nodes);
			span7 = claim_element(div2_nodes, "SPAN", { class: true });
			var span7_nodes = children(span7);

			svg4 = claim_element(
				span7_nodes,
				"svg",
				{
					class: true,
					stroke: true,
					"stroke-width": true,
					fill: true,
					"stroke-linecap": true,
					"stroke-linejoin": true,
					viewBox: true
				},
				1
			);

			var svg4_nodes = children(svg4);
			path6 = claim_element(svg4_nodes, "path", { d: true }, 1);
			children(path6).forEach(detach_dev);
			circle1 = claim_element(svg4_nodes, "circle", { cx: true, cy: true, r: true }, 1);
			children(circle1).forEach(detach_dev);
			svg4_nodes.forEach(detach_dev);
			t26 = claim_text(span7_nodes, "1.2K");
			span7_nodes.forEach(detach_dev);
			t27 = claim_space(div2_nodes);
			span8 = claim_element(div2_nodes, "SPAN", { class: true });
			var span8_nodes = children(span8);

			svg5 = claim_element(
				span8_nodes,
				"svg",
				{
					class: true,
					stroke: true,
					"stroke-width": true,
					fill: true,
					"stroke-linecap": true,
					"stroke-linejoin": true,
					viewBox: true
				},
				1
			);

			var svg5_nodes = children(svg5);
			path7 = claim_element(svg5_nodes, "path", { d: true }, 1);
			children(path7).forEach(detach_dev);
			svg5_nodes.forEach(detach_dev);
			t28 = claim_text(span8_nodes, "6");
			span8_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			t29 = claim_space(div3_nodes);
			a3 = claim_element(div3_nodes, "A", { href: true, class: true });
			var a3_nodes = children(a3);
			img1 = claim_element(a3_nodes, "IMG", { alt: true, src: true, class: true });
			t30 = claim_space(a3_nodes);
			span11 = claim_element(a3_nodes, "SPAN", { class: true });
			var span11_nodes = children(span11);
			span9 = claim_element(span11_nodes, "SPAN", { class: true });
			var span9_nodes = children(span9);
			t31 = claim_text(span9_nodes, "Alper Kamu");
			span9_nodes.forEach(detach_dev);
			t32 = claim_space(span11_nodes);
			span10 = claim_element(span11_nodes, "SPAN", { class: true });
			var span10_nodes = children(span10);
			t33 = claim_text(span10_nodes, "DESIGNER");
			span10_nodes.forEach(detach_dev);
			span11_nodes.forEach(detach_dev);
			a3_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(span0, "class", "inline-block py-1 px-2 rounded bg-pink-50 text-pink-500 text-xs font-medium tracking-widest");
			add_location(span0, file, 26, 8, 698);
			attr_dev(h20, "class", "sm:text-3xl text-2xl title-font font-medium text-gray-900 mt-4 mb-4");
			add_location(h20, file, 30, 8, 862);
			attr_dev(p0, "class", "leading-relaxed mb-8");
			add_location(p0, file, 35, 8, 1055);
			attr_dev(path0, "d", "M5 12h14");
			add_location(path0, file, 56, 14, 1985);
			attr_dev(path1, "d", "M12 5l7 7-7 7");
			add_location(path1, file, 57, 14, 2022);
			attr_dev(svg0, "class", "w-4 h-4 ml-2");
			attr_dev(svg0, "viewBox", "0 0 24 24");
			attr_dev(svg0, "stroke", "currentColor");
			attr_dev(svg0, "stroke-width", "2");
			attr_dev(svg0, "fill", "none");
			attr_dev(svg0, "stroke-linecap", "round");
			attr_dev(svg0, "stroke-linejoin", "round");
			add_location(svg0, file, 47, 12, 1706);
			attr_dev(a0, "href", ".");
			attr_dev(a0, "class", "text-pink-500 inline-flex items-center");
			add_location(a0, file, 45, 10, 1609);
			attr_dev(path2, "d", "M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z");
			add_location(path2, file, 72, 14, 2538);
			attr_dev(circle0, "cx", "12");
			attr_dev(circle0, "cy", "12");
			attr_dev(circle0, "r", "3");
			add_location(circle0, file, 73, 14, 2611);
			attr_dev(svg1, "class", "w-4 h-4 mr-1");
			attr_dev(svg1, "stroke", "currentColor");
			attr_dev(svg1, "stroke-width", "2");
			attr_dev(svg1, "fill", "none");
			attr_dev(svg1, "stroke-linecap", "round");
			attr_dev(svg1, "stroke-linejoin", "round");
			attr_dev(svg1, "viewBox", "0 0 24 24");
			add_location(svg1, file, 63, 12, 2259);
			attr_dev(span1, "class", "text-gray-400 mr-3 inline-flex items-center ml-auto leading-none text-sm pr-3 py-1 border-r-2 border-gray-200");
			add_location(span1, file, 60, 10, 2096);
			attr_dev(path3, "d", "M21 11.5a8.38 8.38 0 01-.9 3.8 8.5 8.5 0 01-7.6 4.7 8.38 8.38 0 01-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 01-.9-3.8 8.5 8.5 0 014.7-7.6 8.38 8.38 0 013.8-.9h.5a8.48 8.48 0 018 8v.5z");
			add_location(path3, file, 88, 14, 3090);
			attr_dev(svg2, "class", "w-4 h-4 mr-1");
			attr_dev(svg2, "stroke", "currentColor");
			attr_dev(svg2, "stroke-width", "2");
			attr_dev(svg2, "fill", "none");
			attr_dev(svg2, "stroke-linecap", "round");
			attr_dev(svg2, "stroke-linejoin", "round");
			attr_dev(svg2, "viewBox", "0 0 24 24");
			add_location(svg2, file, 79, 12, 2811);
			attr_dev(span2, "class", "text-gray-400 inline-flex items-center leading-none text-sm");
			add_location(span2, file, 76, 10, 2698);
			attr_dev(div0, "class", "flex items-center flex-wrap pb-4 mb-4 border-b-2 border-gray-100 mt-auto w-full");
			add_location(div0, file, 42, 8, 1483);
			attr_dev(img0, "alt", "blog");
			if (img0.src !== (img0_src_value = "https://dummyimage.com/104x104")) attr_dev(img0, "src", img0_src_value);
			attr_dev(img0, "class", "w-12 h-12 rounded-full flex-shrink-0 object-cover object-center");
			add_location(img0, file, 95, 10, 3432);
			attr_dev(span3, "class", "title-font font-medium text-gray-900");
			add_location(span3, file, 101, 12, 3678);
			attr_dev(span4, "class", "text-gray-400 text-xs tracking-widest mt-0.5");
			add_location(span4, file, 104, 12, 3796);
			attr_dev(span5, "class", "flex-grow flex flex-col pl-4");
			add_location(span5, file, 100, 10, 3621);
			attr_dev(a1, "href", ".");
			attr_dev(a1, "class", "inline-flex items-center");
			add_location(a1, file, 94, 8, 3375);
			attr_dev(div1, "class", "p-12 md:w-1/2 flex flex-col items-start");
			add_location(div1, file, 25, 6, 635);
			attr_dev(span6, "class", "inline-block py-1 px-2 rounded bg-pink-50 text-pink-500 text-xs font-medium tracking-widest");
			add_location(span6, file, 111, 8, 4022);
			attr_dev(h21, "class", "sm:text-3xl text-2xl title-font font-medium text-gray-900 mt-4 mb-4");
			add_location(h21, file, 115, 8, 4186);
			attr_dev(p1, "class", "leading-relaxed mb-8");
			add_location(p1, file, 120, 8, 4380);
			attr_dev(path4, "d", "M5 12h14");
			add_location(path4, file, 140, 14, 5213);
			attr_dev(path5, "d", "M12 5l7 7-7 7");
			add_location(path5, file, 141, 14, 5250);
			attr_dev(svg3, "class", "w-4 h-4 ml-2");
			attr_dev(svg3, "viewBox", "0 0 24 24");
			attr_dev(svg3, "stroke", "currentColor");
			attr_dev(svg3, "stroke-width", "2");
			attr_dev(svg3, "fill", "none");
			attr_dev(svg3, "stroke-linecap", "round");
			attr_dev(svg3, "stroke-linejoin", "round");
			add_location(svg3, file, 131, 12, 4934);
			attr_dev(a2, "href", ".");
			attr_dev(a2, "class", "text-pink-500 inline-flex items-center");
			add_location(a2, file, 129, 10, 4837);
			attr_dev(path6, "d", "M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z");
			add_location(path6, file, 156, 14, 5766);
			attr_dev(circle1, "cx", "12");
			attr_dev(circle1, "cy", "12");
			attr_dev(circle1, "r", "3");
			add_location(circle1, file, 157, 14, 5839);
			attr_dev(svg4, "class", "w-4 h-4 mr-1");
			attr_dev(svg4, "stroke", "currentColor");
			attr_dev(svg4, "stroke-width", "2");
			attr_dev(svg4, "fill", "none");
			attr_dev(svg4, "stroke-linecap", "round");
			attr_dev(svg4, "stroke-linejoin", "round");
			attr_dev(svg4, "viewBox", "0 0 24 24");
			add_location(svg4, file, 147, 12, 5487);
			attr_dev(span7, "class", "text-gray-400 mr-3 inline-flex items-center ml-auto leading-none text-sm pr-3 py-1 border-r-2 border-gray-200");
			add_location(span7, file, 144, 10, 5324);
			attr_dev(path7, "d", "M21 11.5a8.38 8.38 0 01-.9 3.8 8.5 8.5 0 01-7.6 4.7 8.38 8.38 0 01-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 01-.9-3.8 8.5 8.5 0 014.7-7.6 8.38 8.38 0 013.8-.9h.5a8.48 8.48 0 018 8v.5z");
			add_location(path7, file, 172, 14, 6318);
			attr_dev(svg5, "class", "w-4 h-4 mr-1");
			attr_dev(svg5, "stroke", "currentColor");
			attr_dev(svg5, "stroke-width", "2");
			attr_dev(svg5, "fill", "none");
			attr_dev(svg5, "stroke-linecap", "round");
			attr_dev(svg5, "stroke-linejoin", "round");
			attr_dev(svg5, "viewBox", "0 0 24 24");
			add_location(svg5, file, 163, 12, 6039);
			attr_dev(span8, "class", "text-gray-400 inline-flex items-center leading-none text-sm");
			add_location(span8, file, 160, 10, 5926);
			attr_dev(div2, "class", "flex items-center flex-wrap pb-4 mb-4 border-b-2 border-gray-100 mt-auto w-full");
			add_location(div2, file, 126, 8, 4711);
			attr_dev(img1, "alt", "blog");
			if (img1.src !== (img1_src_value = "https://dummyimage.com/103x103")) attr_dev(img1, "src", img1_src_value);
			attr_dev(img1, "class", "w-12 h-12 rounded-full flex-shrink-0 object-cover object-center");
			add_location(img1, file, 179, 10, 6660);
			attr_dev(span9, "class", "title-font font-medium text-gray-900");
			add_location(span9, file, 185, 12, 6906);
			attr_dev(span10, "class", "text-gray-400 text-xs tracking-widest mt-0.5");
			add_location(span10, file, 186, 12, 6988);
			attr_dev(span11, "class", "flex-grow flex flex-col pl-4");
			add_location(span11, file, 184, 10, 6849);
			attr_dev(a3, "href", ".");
			attr_dev(a3, "class", "inline-flex items-center");
			add_location(a3, file, 178, 8, 6603);
			attr_dev(div3, "class", "p-12 md:w-1/2 flex flex-col items-start");
			add_location(div3, file, 110, 6, 3959);
			attr_dev(div4, "class", "flex flex-wrap -m-12");
			add_location(div4, file, 24, 4, 593);
			attr_dev(div5, "class", "container px-5 py-24 mx-auto");
			add_location(div5, file, 23, 2, 545);
			attr_dev(section, "class", "text-gray-600 body-font overflow-hidden");
			add_location(section, file, 22, 0, 484);
		},
		m: function mount(target, anchor) {
			mount_component(svelteseo, target, anchor);
			insert_dev(target, t0, anchor);
			insert_dev(target, section, anchor);
			append_dev(section, div5);
			append_dev(div5, div4);
			append_dev(div4, div1);
			append_dev(div1, span0);
			append_dev(span0, t1);
			append_dev(div1, t2);
			append_dev(div1, h20);
			append_dev(h20, t3);
			append_dev(div1, t4);
			append_dev(div1, p0);
			append_dev(p0, t5);
			append_dev(div1, t6);
			append_dev(div1, div0);
			append_dev(div0, a0);
			append_dev(a0, t7);
			append_dev(a0, svg0);
			append_dev(svg0, path0);
			append_dev(svg0, path1);
			append_dev(div0, t8);
			append_dev(div0, span1);
			append_dev(span1, svg1);
			append_dev(svg1, path2);
			append_dev(svg1, circle0);
			append_dev(span1, t9);
			append_dev(div0, t10);
			append_dev(div0, span2);
			append_dev(span2, svg2);
			append_dev(svg2, path3);
			append_dev(span2, t11);
			append_dev(div1, t12);
			append_dev(div1, a1);
			append_dev(a1, img0);
			append_dev(a1, t13);
			append_dev(a1, span5);
			append_dev(span5, span3);
			append_dev(span3, t14);
			append_dev(span5, t15);
			append_dev(span5, span4);
			append_dev(span4, t16);
			append_dev(div4, t17);
			append_dev(div4, div3);
			append_dev(div3, span6);
			append_dev(span6, t18);
			append_dev(div3, t19);
			append_dev(div3, h21);
			append_dev(h21, t20);
			append_dev(div3, t21);
			append_dev(div3, p1);
			append_dev(p1, t22);
			append_dev(div3, t23);
			append_dev(div3, div2);
			append_dev(div2, a2);
			append_dev(a2, t24);
			append_dev(a2, svg3);
			append_dev(svg3, path4);
			append_dev(svg3, path5);
			append_dev(div2, t25);
			append_dev(div2, span7);
			append_dev(span7, svg4);
			append_dev(svg4, path6);
			append_dev(svg4, circle1);
			append_dev(span7, t26);
			append_dev(div2, t27);
			append_dev(div2, span8);
			append_dev(span8, svg5);
			append_dev(svg5, path7);
			append_dev(span8, t28);
			append_dev(div3, t29);
			append_dev(div3, a3);
			append_dev(a3, img1);
			append_dev(a3, t30);
			append_dev(a3, span11);
			append_dev(span11, span9);
			append_dev(span9, t31);
			append_dev(span11, t32);
			append_dev(span11, span10);
			append_dev(span10, t33);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(svelteseo.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(svelteseo.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(svelteseo, detaching);
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(section);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("About", slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<About> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ SvelteSeo });
	return [];
}

class About extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "About",
			options,
			id: create_fragment.name
		});
	}
}

export default About;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
