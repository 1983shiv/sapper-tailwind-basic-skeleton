import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, e as element, a as svg_element, b as space, t as text, c as create_component, f as claim_element, g as children, h as detach_dev, j as claim_space, k as claim_text, l as claim_component, m as attr_dev, n as add_location, o as insert_dev, p as append_dev, q as mount_component, r as noop, u as transition_in, w as transition_out, x as destroy_component, y as query_selector_all } from './client.66758637.js';
import { I as Image } from './Image.43ea3073.js';
import './_commonjsHelpers.91583ccb.js';

var homehero = "/client/8253f957d6d85818.jpg";

/* src\components\NavHero.svelte generated by Svelte v3.38.2 */
const file = "src\\components\\NavHero.svelte";

function create_fragment$1(ctx) {
	let div8;
	let div6;
	let div5;
	let svg;
	let polygon;
	let t0;
	let div4;
	let div3;
	let h1;
	let span0;
	let t1;
	let t2;
	let span1;
	let t3;
	let t4;
	let p;
	let t5;
	let t6;
	let div2;
	let div0;
	let a0;
	let t7;
	let t8;
	let div1;
	let a1;
	let t9;
	let t10;
	let div7;
	let image;
	let current;

	image = new Image({
			props: { src: homehero, alt: "Hero Image" },
			$$inline: true
		});

	const block = {
		c: function create() {
			div8 = element("div");
			div6 = element("div");
			div5 = element("div");
			svg = svg_element("svg");
			polygon = svg_element("polygon");
			t0 = space();
			div4 = element("div");
			div3 = element("div");
			h1 = element("h1");
			span0 = element("span");
			t1 = text("Transforming Your Digital Idea");
			t2 = space();
			span1 = element("span");
			t3 = text("into Reality");
			t4 = space();
			p = element("p");
			t5 = text("Anim aute id magna aliqua ad ad non deserunt sunt. Qui irure qui\r\n            lorem cupidatat commodo. Elit sunt amet fugiat veniam occaecat\r\n            fugiat aliqua.");
			t6 = space();
			div2 = element("div");
			div0 = element("div");
			a0 = element("a");
			t7 = text("Services");
			t8 = space();
			div1 = element("div");
			a1 = element("a");
			t9 = text("Portfolio");
			t10 = space();
			div7 = element("div");
			create_component(image.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			div8 = claim_element(nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			div6 = claim_element(div8_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			div5 = claim_element(div6_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);

			svg = claim_element(
				div5_nodes,
				"svg",
				{
					class: true,
					fill: true,
					viewBox: true,
					preserveAspectRatio: true,
					"aria-hidden": true
				},
				1
			);

			var svg_nodes = children(svg);
			polygon = claim_element(svg_nodes, "polygon", { points: true }, 1);
			children(polygon).forEach(detach_dev);
			svg_nodes.forEach(detach_dev);
			t0 = claim_space(div5_nodes);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			h1 = claim_element(div3_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			span0 = claim_element(h1_nodes, "SPAN", { class: true });
			var span0_nodes = children(span0);
			t1 = claim_text(span0_nodes, "Transforming Your Digital Idea");
			span0_nodes.forEach(detach_dev);
			t2 = claim_space(h1_nodes);
			span1 = claim_element(h1_nodes, "SPAN", { class: true });
			var span1_nodes = children(span1);
			t3 = claim_text(span1_nodes, "into Reality");
			span1_nodes.forEach(detach_dev);
			h1_nodes.forEach(detach_dev);
			t4 = claim_space(div3_nodes);
			p = claim_element(div3_nodes, "P", { class: true });
			var p_nodes = children(p);
			t5 = claim_text(p_nodes, "Anim aute id magna aliqua ad ad non deserunt sunt. Qui irure qui\r\n            lorem cupidatat commodo. Elit sunt amet fugiat veniam occaecat\r\n            fugiat aliqua.");
			p_nodes.forEach(detach_dev);
			t6 = claim_space(div3_nodes);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div0 = claim_element(div2_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			a0 = claim_element(div0_nodes, "A", { href: true, class: true });
			var a0_nodes = children(a0);
			t7 = claim_text(a0_nodes, "Services");
			a0_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t8 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			a1 = claim_element(div1_nodes, "A", { href: true, class: true });
			var a1_nodes = children(a1);
			t9 = claim_text(a1_nodes, "Portfolio");
			a1_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			t10 = claim_space(div8_nodes);
			div7 = claim_element(div8_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			claim_component(image.$$.fragment, div7_nodes);
			div7_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(polygon, "points", "50,0 100,0 50,100 0,100");
			add_location(polygon, file, 18, 8, 648);
			attr_dev(svg, "class", "hidden lg:block absolute right-0 inset-y-0 h-full w-48 text-white transform translate-x-1/2");
			attr_dev(svg, "fill", "currentColor");
			attr_dev(svg, "viewBox", "0 0 100 100");
			attr_dev(svg, "preserveAspectRatio", "none");
			attr_dev(svg, "aria-hidden", "true");
			add_location(svg, file, 11, 6, 392);
			attr_dev(span0, "class", "block xl:inline");
			add_location(span0, file, 28, 12, 1018);
			attr_dev(span1, "class", "block text-pink-600 xl:inline");
			add_location(span1, file, 29, 12, 1099);
			attr_dev(h1, "class", "text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl");
			add_location(h1, file, 25, 10, 890);
			attr_dev(p, "class", "mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0");
			add_location(p, file, 31, 10, 1191);
			attr_dev(a0, "href", ".");
			attr_dev(a0, "class", "w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-white bg-pink-600 hover:bg-pink-700 md:py-4 md:text-lg md:px-10");
			add_location(a0, file, 40, 14, 1665);
			attr_dev(div0, "class", "rounded-md shadow");
			add_location(div0, file, 39, 12, 1618);
			attr_dev(a1, "href", ".");
			attr_dev(a1, "class", "w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-pink-700 bg-pink-100 hover:bg-pink-200 md:py-4 md:text-lg md:px-10");
			add_location(a1, file, 48, 14, 2043);
			attr_dev(div1, "class", "mt-3 sm:mt-0 sm:ml-3");
			add_location(div1, file, 47, 12, 1993);
			attr_dev(div2, "class", "mt-5 sm:mt-8 sm:flex sm:justify-center lg:justify-start");
			add_location(div2, file, 38, 10, 1535);
			attr_dev(div3, "class", "sm:text-center lg:text-left");
			add_location(div3, file, 24, 8, 837);
			attr_dev(div4, "class", "mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28");
			add_location(div4, file, 21, 6, 716);
			attr_dev(div5, "class", "relative z-10 pb-8 bg-white sm:pb-16 md:pb-20 lg:max-w-2xl lg:w-full lg:pb-28 xl:pb-32");
			add_location(div5, file, 8, 4, 271);
			attr_dev(div6, "class", "max-w-7xl mx-auto");
			add_location(div6, file, 7, 2, 234);
			attr_dev(div7, "class", "lg:absolute lg:inset-y-0 lg:right-0 lg:w-1/2");
			add_location(div7, file, 60, 2, 2435);
			attr_dev(div8, "class", "relative bg-white overflow-hidden");
			add_location(div8, file, 6, 0, 183);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div8, anchor);
			append_dev(div8, div6);
			append_dev(div6, div5);
			append_dev(div5, svg);
			append_dev(svg, polygon);
			append_dev(div5, t0);
			append_dev(div5, div4);
			append_dev(div4, div3);
			append_dev(div3, h1);
			append_dev(h1, span0);
			append_dev(span0, t1);
			append_dev(h1, t2);
			append_dev(h1, span1);
			append_dev(span1, t3);
			append_dev(div3, t4);
			append_dev(div3, p);
			append_dev(p, t5);
			append_dev(div3, t6);
			append_dev(div3, div2);
			append_dev(div2, div0);
			append_dev(div0, a0);
			append_dev(a0, t7);
			append_dev(div2, t8);
			append_dev(div2, div1);
			append_dev(div1, a1);
			append_dev(a1, t9);
			append_dev(div8, t10);
			append_dev(div8, div7);
			mount_component(image, div7, null);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(image.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(image.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div8);
			destroy_component(image);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("NavHero", slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<NavHero> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ homehero, Image });
	return [];
}

class NavHero extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "NavHero",
			options,
			id: create_fragment$1.name
		});
	}
}

/* src\routes\index.svelte generated by Svelte v3.38.2 */

function create_fragment(ctx) {
	let t;
	let navhero;
	let current;
	navhero = new NavHero({ $$inline: true });

	const block = {
		c: function create() {
			t = space();
			create_component(navhero.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-oofwcx\"]", document.head);
			head_nodes.forEach(detach_dev);
			t = claim_space(nodes);
			claim_component(navhero.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			document.title = "Sapper project template";
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
			mount_component(navhero, target, anchor);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(navhero.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(navhero.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
			destroy_component(navhero, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Routes", slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Routes> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ NavHero });
	return [];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment.name
		});
	}
}

export default Routes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguODQwOGQzMTguanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ub2RlX21vZHVsZXMvaW1hZ2VzL2hvbWVoZXJvLmpwZyIsIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL05hdkhlcm8uc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiL2NsaWVudC84MjUzZjk1N2Q2ZDg1ODE4LmpwZ1wiIiwiPHNjcmlwdD5cclxuICAvLyBpbXBvcnQgSW1hZ2UgZnJvbSBcInN2ZWx0ZS1pbWFnZVwiO1xyXG4gIGltcG9ydCBob21laGVybyBmcm9tIFwiaW1hZ2VzL2hvbWVoZXJvLmpwZ1wiO1xyXG4gIGltcG9ydCBJbWFnZSBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL3N2ZWx0ZS1pbWFnZS9zcmMvSW1hZ2Uuc3ZlbHRlXCI7XHJcbjwvc2NyaXB0PlxyXG5cclxuPGRpdiBjbGFzcz1cInJlbGF0aXZlIGJnLXdoaXRlIG92ZXJmbG93LWhpZGRlblwiPlxyXG4gIDxkaXYgY2xhc3M9XCJtYXgtdy03eGwgbXgtYXV0b1wiPlxyXG4gICAgPGRpdlxyXG4gICAgICBjbGFzcz1cInJlbGF0aXZlIHotMTAgcGItOCBiZy13aGl0ZSBzbTpwYi0xNiBtZDpwYi0yMCBsZzptYXgtdy0yeGwgbGc6dy1mdWxsIGxnOnBiLTI4IHhsOnBiLTMyXCJcclxuICAgID5cclxuICAgICAgPHN2Z1xyXG4gICAgICAgIGNsYXNzPVwiaGlkZGVuIGxnOmJsb2NrIGFic29sdXRlIHJpZ2h0LTAgaW5zZXQteS0wIGgtZnVsbCB3LTQ4IHRleHQtd2hpdGUgdHJhbnNmb3JtIHRyYW5zbGF0ZS14LTEvMlwiXHJcbiAgICAgICAgZmlsbD1cImN1cnJlbnRDb2xvclwiXHJcbiAgICAgICAgdmlld0JveD1cIjAgMCAxMDAgMTAwXCJcclxuICAgICAgICBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVwibm9uZVwiXHJcbiAgICAgICAgYXJpYS1oaWRkZW49XCJ0cnVlXCJcclxuICAgICAgPlxyXG4gICAgICAgIDxwb2x5Z29uIHBvaW50cz1cIjUwLDAgMTAwLDAgNTAsMTAwIDAsMTAwXCIgLz5cclxuICAgICAgPC9zdmc+XHJcblxyXG4gICAgICA8ZGl2XHJcbiAgICAgICAgY2xhc3M9XCJtdC0xMCBteC1hdXRvIG1heC13LTd4bCBweC00IHNtOm10LTEyIHNtOnB4LTYgbWQ6bXQtMTYgbGc6bXQtMjAgbGc6cHgtOCB4bDptdC0yOFwiXHJcbiAgICAgID5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwic206dGV4dC1jZW50ZXIgbGc6dGV4dC1sZWZ0XCI+XHJcbiAgICAgICAgICA8aDFcclxuICAgICAgICAgICAgY2xhc3M9XCJ0ZXh0LTR4bCB0cmFja2luZy10aWdodCBmb250LWV4dHJhYm9sZCB0ZXh0LWdyYXktOTAwIHNtOnRleHQtNXhsIG1kOnRleHQtNnhsXCJcclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJibG9jayB4bDppbmxpbmVcIj5UcmFuc2Zvcm1pbmcgWW91ciBEaWdpdGFsIElkZWE8L3NwYW4+XHJcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYmxvY2sgdGV4dC1waW5rLTYwMCB4bDppbmxpbmVcIj5pbnRvIFJlYWxpdHk8L3NwYW4+XHJcbiAgICAgICAgICA8L2gxPlxyXG4gICAgICAgICAgPHBcclxuICAgICAgICAgICAgY2xhc3M9XCJtdC0zIHRleHQtYmFzZSB0ZXh0LWdyYXktNTAwIHNtOm10LTUgc206dGV4dC1sZyBzbTptYXgtdy14bCBzbTpteC1hdXRvIG1kOm10LTUgbWQ6dGV4dC14bCBsZzpteC0wXCJcclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgQW5pbSBhdXRlIGlkIG1hZ25hIGFsaXF1YSBhZCBhZCBub24gZGVzZXJ1bnQgc3VudC4gUXVpIGlydXJlIHF1aVxyXG4gICAgICAgICAgICBsb3JlbSBjdXBpZGF0YXQgY29tbW9kby4gRWxpdCBzdW50IGFtZXQgZnVnaWF0IHZlbmlhbSBvY2NhZWNhdFxyXG4gICAgICAgICAgICBmdWdpYXQgYWxpcXVhLlxyXG4gICAgICAgICAgPC9wPlxyXG4gICAgICAgICAgPGRpdiBjbGFzcz1cIm10LTUgc206bXQtOCBzbTpmbGV4IHNtOmp1c3RpZnktY2VudGVyIGxnOmp1c3RpZnktc3RhcnRcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvdW5kZWQtbWQgc2hhZG93XCI+XHJcbiAgICAgICAgICAgICAgPGFcclxuICAgICAgICAgICAgICAgIGhyZWY9XCIuXCJcclxuICAgICAgICAgICAgICAgIGNsYXNzPVwidy1mdWxsIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHB4LTggcHktMyBib3JkZXIgYm9yZGVyLXRyYW5zcGFyZW50IHRleHQtYmFzZSBmb250LW1lZGl1bSByb3VuZGVkLW1kIHRleHQtd2hpdGUgYmctcGluay02MDAgaG92ZXI6YmctcGluay03MDAgbWQ6cHktNCBtZDp0ZXh0LWxnIG1kOnB4LTEwXCJcclxuICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICBTZXJ2aWNlc1xyXG4gICAgICAgICAgICAgIDwvYT5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtdC0zIHNtOm10LTAgc206bWwtM1wiPlxyXG4gICAgICAgICAgICAgIDxhXHJcbiAgICAgICAgICAgICAgICBocmVmPVwiLlwiXHJcbiAgICAgICAgICAgICAgICBjbGFzcz1cInctZnVsbCBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBweC04IHB5LTMgYm9yZGVyIGJvcmRlci10cmFuc3BhcmVudCB0ZXh0LWJhc2UgZm9udC1tZWRpdW0gcm91bmRlZC1tZCB0ZXh0LXBpbmstNzAwIGJnLXBpbmstMTAwIGhvdmVyOmJnLXBpbmstMjAwIG1kOnB5LTQgbWQ6dGV4dC1sZyBtZDpweC0xMFwiXHJcbiAgICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAgUG9ydGZvbGlvXHJcbiAgICAgICAgICAgICAgPC9hPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gIDwvZGl2PlxyXG4gIDxkaXYgY2xhc3M9XCJsZzphYnNvbHV0ZSBsZzppbnNldC15LTAgbGc6cmlnaHQtMCBsZzp3LTEvMlwiPlxyXG4gICAgPEltYWdlIHNyYz17aG9tZWhlcm99IGFsdD1cIkhlcm8gSW1hZ2VcIiAvPlxyXG4gIDwvZGl2PlxyXG48L2Rpdj5cclxuXHJcbjwhLS0gaHR0cHM6Ly9pbWFnZXMudW5zcGxhc2guY29tL3Bob3RvLTE1NTE0MzQ2NzgtZTA3NmMyMjNhNjkyP2l4bGliPXJiLTEuMi4xJml4aWQ9ZXlKaGNIQmZhV1FpT2pFeU1EZDkmYXV0bz1mb3JtYXQmZml0PWNyb3Amdz0yODUwJnE9ODAgLS0+XHJcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsZUFBZTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7aUJDNkRDLFFBQVE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
